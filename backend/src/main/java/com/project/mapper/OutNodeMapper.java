package com.project.mapper;

import com.project.model.OutNode;
import com.project.model.OutNodeExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface OutNodeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    int countByExample(OutNodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    int deleteByExample(OutNodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    @Delete({
        "delete from lora_web_node",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    @Insert({
        "insert into lora_web_node (id, name, ",
        "dev_eui, spreading_factor, ",
        "channel_group, longitude, ",
        "latitude, last_packet_time)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{devEui,jdbcType=VARCHAR}, #{spreadingFactor,jdbcType=INTEGER}, ",
        "#{channelGroup,jdbcType=INTEGER}, #{longitude,jdbcType=DOUBLE}, ",
        "#{latitude,jdbcType=DOUBLE}, #{lastPacketTime,jdbcType=TIMESTAMP})"
    })
    int insert(OutNode record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    int insertSelective(OutNode record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    List<OutNode> selectByExample(OutNodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, name, dev_eui, spreading_factor, channel_group, longitude, latitude, last_packet_time",
        "from lora_web_node",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    OutNode selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") OutNode record, @Param("example") OutNodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") OutNode record, @Param("example") OutNodeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(OutNode record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lora_web_node
     *
     * @mbggenerated
     */
    @Update({
        "update lora_web_node",
        "set name = #{name,jdbcType=VARCHAR},",
          "dev_eui = #{devEui,jdbcType=VARCHAR},",
          "spreading_factor = #{spreadingFactor,jdbcType=INTEGER},",
          "channel_group = #{channelGroup,jdbcType=INTEGER},",
          "longitude = #{longitude,jdbcType=DOUBLE},",
          "latitude = #{latitude,jdbcType=DOUBLE},",
          "last_packet_time = #{lastPacketTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(OutNode record);
}