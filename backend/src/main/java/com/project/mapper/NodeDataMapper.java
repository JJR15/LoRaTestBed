package com.project.mapper;

import com.project.model.NodeData;
import com.project.model.NodeDataExample;
import com.project.model.NodeDataKey;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.springframework.stereotype.Repository;

@Repository
public interface NodeDataMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    int countByExample(NodeDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    int deleteByExample(NodeDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    @Delete({
        "delete from node_data",
        "where timestamp = #{timestamp,jdbcType=VARCHAR}",
          "and devEUI = #{deveui,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(NodeDataKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    @Insert({
        "insert into node_data (timestamp, devEUI, ",
        "nodeName, data, ",
        "allData)",
        "values (#{timestamp,jdbcType=VARCHAR}, #{deveui,jdbcType=VARCHAR}, ",
        "#{nodename,jdbcType=VARCHAR}, #{data,jdbcType=VARCHAR}, ",
        "#{alldata,jdbcType=VARCHAR})"
    })
    int insert(NodeData record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    int insertSelective(NodeData record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    List<NodeData> selectByExample(NodeDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "timestamp, devEUI, nodeName, data, allData",
        "from node_data",
        "where timestamp = #{timestamp,jdbcType=VARCHAR}",
          "and devEUI = #{deveui,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    NodeData selectByPrimaryKey(NodeDataKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") NodeData record, @Param("example") NodeDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") NodeData record, @Param("example") NodeDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(NodeData record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table node_data
     *
     * @mbggenerated
     */
    @Update({
        "update node_data",
        "set nodeName = #{nodename,jdbcType=VARCHAR},",
          "data = #{data,jdbcType=VARCHAR},",
          "allData = #{alldata,jdbcType=VARCHAR}",
        "where timestamp = #{timestamp,jdbcType=VARCHAR}",
          "and devEUI = #{deveui,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(NodeData record);
}