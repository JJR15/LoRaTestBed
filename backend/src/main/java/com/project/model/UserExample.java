package com.project.model;

import java.util.ArrayList;
import java.util.List;

public class UserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    public UserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUsernameIsNull() {
            addCriterion("username is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("username is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("username =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("username <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("username >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("username >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("username <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("username <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("username like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("username not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("username in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("username not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("username between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("username not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andPwdhashIsNull() {
            addCriterion("pwdHash is null");
            return (Criteria) this;
        }

        public Criteria andPwdhashIsNotNull() {
            addCriterion("pwdHash is not null");
            return (Criteria) this;
        }

        public Criteria andPwdhashEqualTo(String value) {
            addCriterion("pwdHash =", value, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashNotEqualTo(String value) {
            addCriterion("pwdHash <>", value, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashGreaterThan(String value) {
            addCriterion("pwdHash >", value, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashGreaterThanOrEqualTo(String value) {
            addCriterion("pwdHash >=", value, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashLessThan(String value) {
            addCriterion("pwdHash <", value, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashLessThanOrEqualTo(String value) {
            addCriterion("pwdHash <=", value, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashLike(String value) {
            addCriterion("pwdHash like", value, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashNotLike(String value) {
            addCriterion("pwdHash not like", value, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashIn(List<String> values) {
            addCriterion("pwdHash in", values, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashNotIn(List<String> values) {
            addCriterion("pwdHash not in", values, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashBetween(String value1, String value2) {
            addCriterion("pwdHash between", value1, value2, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdhashNotBetween(String value1, String value2) {
            addCriterion("pwdHash not between", value1, value2, "pwdhash");
            return (Criteria) this;
        }

        public Criteria andPwdsaltIsNull() {
            addCriterion("pwdSalt is null");
            return (Criteria) this;
        }

        public Criteria andPwdsaltIsNotNull() {
            addCriterion("pwdSalt is not null");
            return (Criteria) this;
        }

        public Criteria andPwdsaltEqualTo(String value) {
            addCriterion("pwdSalt =", value, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltNotEqualTo(String value) {
            addCriterion("pwdSalt <>", value, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltGreaterThan(String value) {
            addCriterion("pwdSalt >", value, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltGreaterThanOrEqualTo(String value) {
            addCriterion("pwdSalt >=", value, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltLessThan(String value) {
            addCriterion("pwdSalt <", value, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltLessThanOrEqualTo(String value) {
            addCriterion("pwdSalt <=", value, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltLike(String value) {
            addCriterion("pwdSalt like", value, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltNotLike(String value) {
            addCriterion("pwdSalt not like", value, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltIn(List<String> values) {
            addCriterion("pwdSalt in", values, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltNotIn(List<String> values) {
            addCriterion("pwdSalt not in", values, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltBetween(String value1, String value2) {
            addCriterion("pwdSalt between", value1, value2, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andPwdsaltNotBetween(String value1, String value2) {
            addCriterion("pwdSalt not between", value1, value2, "pwdsalt");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}